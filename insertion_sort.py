def insertionSort(inputString):
    inputArray = list(map(int, inputString.split()))
    count = 0
    for i in range(1, len(inputArray)):
        j = i
        while (j > 0) and (inputArray[j] < inputArray[j-1]):
            inputArray[j-1], inputArray[j] = inputArray[j], inputArray[j-1]
            j -= 1
            count += 1
    return count


istring = "20842 -72601 36326 40389 -98904 -89400 1939 20421 -89944 -15825 -43461 87109 -38981 -81118 59323 -10119 83441 94462 -78241 14493 62762 17263 40454 98694 -82091 -3707 -78001 89042 63602 41482 -46483 20074 -56595 -70968 -33731 -92671 3394 32936 -87342 80271 61241 70807 -84529 99946 -32131 70257 554 -6155 25081 41364 32676 -74332 84396 -87903 -36830 -99958 -84877 -99912 -1338 861 -88411 -30182 -99202 -8307 8062 27431 71640 -3624 -96604 -73217 40763 -20833 -90712 64083 -56403 87010 -66905 -78956 -59696 10865 -92560 -13627 -32634 -9507 74501 -8280 57334 69603 79246 -63791 -5272 82176 76194 83841 -53272 -64811 24467 72441 98167 -12806 46756 -10134 11328 -16553 77598 26138 -22308 60502 47860 -22191 -52620 -24420 93757 77277 33159 -30610 -88864 -2083 -70065 -25329 14160 1287 35235 59993 21145 -97522 98523 4518 65190 13955 -26436 -77039 -25378 37604 29941 -56434 40753 -20667 74974 -34401 -97401 69129 -16702 -11406 51783 -52429 44436 32064 24183 67597 6364 93723 -22740 -29195 96928 -59775 59258 -43768 79376 27529 -45164 -69333 -91381 -83024 29967 89785 -35039 -61559 -77567 -90526 41669 -71480 52173 -165 57313 92486 -13163 85367 31503 57592 22832 27172 89171 38630 65404 9717 -88613 -99672 -47738 72884 67382 5709 15946 2677 -96816 55614 22326 -388 -46863 1566 -77408 -68707 16151 -80450 -22129 47562 -39797 54463 -8558 24720 1512 17332 -50854 99657 -73392 75820 2911 -80904 41378 -51950 76336 -31297 -8857 67058 60993 -40413 36571 -2637 3223 -76423 51999 -57521 -69509 -7784 52568 64981 1338 22961 35351 38774 -94300 1763 12394 75198 75024 73023 72995 -49917 -71510 12053 71792 -76026 71682 17168 83020 -15212 -89590 55928 23818 -35230 10871 55930 25906 -88468 35570 -26886 -64273 -35337 67817 -59920 78654 -5501 -76640 18628 39794 94435 -20633 7735 89654 -2854 24450 38374 -26323 -43682 -35545 -41711 57278 -36612 74153 78778 46337 -17952 -84451 -54833 24140 -96073 75775 46895 6878 -88654 -40586 -32308 -58248 -30723 -71763 -79444 85034 40387 77503 15564 -44468 -17297 -69550 -72769 -28039 -79390 -23082 53445 -10576 -60114 10341 48028 33272 94286 37294 66956 95044 -81658 53799 59944 -90755 27165 -43301 81412 39579 -38370 23009 -37798 -66173 64058 94599 -83968 -82100 -99078 -1803 -94422 14145 -67799 99704 -99770 -6682 -51492 99073 75870 4203 -4902 -99320 95359 -76648 67579 31943 -33085 -2298 -50853 -31574 63635 -232 20905 34204 -42847 52749 -45181 -49300 -71915 98753 23173 -27904 85037 -66318 -73906 -61218 31727 -55158 30528 53204 91245 -19198 45229 12119 9371 500 22493 70020 -8145 2077 72058 34078 16321 9307 64358 24093 45605 -21618 37674 -68526 -32001 -93323 33617 90409 -75360 -52817 -41648 61478 57140 63305 43125 -29391 -56652 61074 43235 92210 30522 -2624 89798 8374 25463 -31364 65630 -8004 69997 72263 -13177 -22506 -98080 -94948 84347 -27642 -42824 -56546 -84583 35573 -5662 -10479 70743 81806 -63374 50118 -42110 15546 -65233 57960 74502 -61726 41931 27973 -50870 83093 39562 86362 3372 -51817 96700 65211 23317 -17040 74311 60958 -854 58619 38724 -43358 -91120 9961 90294 13888 -34887 -80189 1652 59559 14159 10497 -44457 -53527 -38416 86830 -85532 -5267 98848 50279 -56767 -66024 85108 -98362 -48831 -48523 11093 58608 1367 -67751 -33901 92916 -73708 96039 -19088 74174 84402 -45288 30693 -95777 3928 66428 44263 86814 42386 2841 82163 41654 51838 -14203 -96621 -96590 -38626 -5972 89015 -16129 -88471 -5343 13212 -95342 -5982 -49420 60978 42377 99919 74766 -46924 39271 -51855 94481 81301 -89379 9503 -748 -30462 -21656 11330 -54792 99577 16083 -98856 -63412 53661 -51524 68650 -55376 82043 -28294 77784 -19243 14300 -5114 -4053 8555 -42689 80972 -2710 -48008 -64188 -37183 -75563 -55384 1782 -54588 97884 -10993 -7006 -98871 20266 31139 -36249 -50959 57489 15470 11386 3081 -87049 -53780 -2512 54003 50119 48632 41651 46702 66952 -61460 84325 -44790 20972 83701 -18697 -82193 33426 74049 -52160 -57183 -98662 -3975 38412 68488 2349 -23601 90751 -20129 -61236 92783 -53213 67109 -2726 -32807 72441 -11642 20732 33245 -62098 83734 38298 -97873 58189 -20386 -14809 -44656 -93794 -61625 -67673 -73692 -52148 69660 -9281 -78086 76921 -76187 -45302 91968 47505 81468 71631 70598 37499 30177 25969 48322 -96758 -96376 55359 -52472 32913 41684 -54438 -74037 -72378 80791 -60059 7814 -40629 -8412 -29557 -53243 2539 13934 -34771 -78129 2604 51372 39549 -50586 -30135 96916 20588 -18278 -50263 14598 -34109 84205 -90184 91707 38569 36105 -45536 52643 76533 -56274 53132 1032 39950 -92816 99161 58318 41897 41949 -32605 -82917 2017 -57838 -74200 11379 -31542 -16122 -16263 695 2468 -51585 -51311 51658 -22552 -13979 33852 72819 -32431 -59826 -61623 43449 -4099 -54655 10248 98314 -53024 49077 -75483 79364 -66909 96412 92433 80095 -39025 92664 -86255 -42865 -32273 -48243 81730 82534 -20618 66785 43313 -9788 -28219 -57451 -94642 -17856 53510 96699 -32505 -60375 -78606 -4041 69086 -20726 -8961 46062 -22056 -6806 14662 15176 22710 -17341 -90733 -84021 -75110 -71189 -84429 37529 65863 -6850 -43263 -64728 -10346 -31147 99713 10583 37691 -36040 -77808 -32087 -84099 -52095 2603 11205 51443 37926 -87389 89035 -80109 95519 90196 -5635 61607 -32403 84465 -81131 61101 -34132 53515 -1788 -70519 -28020 65767 -87185 16669 16845 95398 15158 -26838 38266 30052 62975 -61631 69990 -7593 -49164 -75647 -15838 87876 53778 -61796 16008 84871 -83005 -61640 -11869 47210 -76567 -63468 -57742 -12942 21048 14015 2023 14503 -99529 6116 43542 76460 -59737 -17960 -58304"
print(insertionSort(istring))
